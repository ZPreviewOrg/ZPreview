name: Pending Grant Application Workflow

on:
  issues:
    types: [labeled, unlabeled]

permissions:
  issues: write

jobs:
  process-pending-grant-application:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'Pending Grant Application')
    steps:
      - name: Generate a token
        id: generate-token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ vars.ADMIN_APP_ID }}
          private_key: ${{ secrets.ADMIN_APP_PRIVATE_KEY }}
          installation_retrieval_mode: id
          installation_retrieval_payload: ${{ vars.ADMIN_APP_INSTALLATION_ID }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}

      - name: Get Issue "Status" for All Projects
        id: get-status-list
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        uses: octokit/graphql-action@v2.x
        with:
          query: |
            query GetIssueStatus($issueId: ID!) {
                node(id: $issueId) {
                  ... on Issue {
                    projectItems(first: 10) {
                      nodes {
                        id
                        fieldValueByName(name: "Status") {
                          ... on ProjectV2ItemFieldSingleSelectValue {
                            field {
                              ... on ProjectV2SingleSelectField {
                                id     https://github.com/ZPreviewOrg/ZPreview/issues/new?assignees=&labels=Pending+Grant+Application&projects=&template=grant_application.yaml&title=Grant+Application+-+%7BEnter+Application+Name+Here%7D
                                name   https://github.com/ZPreviewOrg/ZPreview/issues/new?assignees=&template=grant_application.yaml&Grant+Application+-+%7BEnter+Application+Name+Here%7D&labels=Pending+Grant+Application&terms_and_conditions_checkboxes=true&assignees=@ZcashDev123%2C%20@BlockchainBuilder456&organization_details_name=Secure%20Privacy%20Solutions%20LLC&organization_details_discovery=Through%20the%20Zcash%20Community%20Forum%20and%20Twitter%20discussions&project_overview_amount=%2475%2C000&project_overview_category=Non-Wallet%20Applications&team_information_project_lead=Name%3A%20Sarah%20Chen%0ARole%3A%20Lead%20Developer%20%26%20Project%20Manager%0ABackground%3A%208%20years%20of%20experience%20in%20cryptography%20and%20privacy-focused%20applications%2C%20previously%20led%20development%20at%20a%20major%20privacy-focused%20wallet%20company%0AResponsibilities%3A%20Overall%20project%20management%2C%20technical%20architecture%2C%20and%20core%20development&team_information_members=-%20Name%3A%20Michael%20Rodriguez%0A%20%20Role%3A%20Senior%20Developer%0A%20%20Background%3A%205%20years%20experience%20in%20blockchain%20development%2C%20specialized%20in%20zero-knowledge%20proofs%0A%20%20Responsibilities%3A%20Implementation%20of%20core%20privacy%20features%20and%20testing%0A%0A-%20Name%3A%20Dr.%20Emma%20Thompson%0A%20%20Role%3A%20Cryptography%20Researcher%0A%20%20Background%3A%20PhD%20in%20Applied%20Cryptography%2C%203%20years%20post-doc%20research%20in%20ZK-SNARKs%0A%20%20Responsibilities%3A%20Protocol%20design%20and%20security%20analysis&project_details_summary=Development%20of%20ZcashConnect%20-%20a%20privacy-preserving%20messaging%20protocol%20built%20on%20top%20of%20Zcash%20that%20enables%20secure%2C%20anonymous%20communication%20between%20wallet%20addresses%20while%20leveraging%20the%20network%27s%20existing%20privacy%20features.&project_details_description=ZcashConnect%20aims%20to%20create%20a%20secure%20communication%20layer%20for%20Zcash%20users%2C%20allowing%20them%20to%20exchange%20encrypted%20messages%20tied%20to%20their%20shielded%20addresses.%20The%20protocol%20will%20enable%20users%20to%20communicate%20without%20revealing%20their%20identity%20while%20ensuring%20message%20authenticity%20through%20cryptographic%20proofs.%20This%20will%20expand%20Zcash%27s%20utility%20beyond%20financial%20transactions%20into%20secure%20communications.&project_details_problem=Currently%2C%20Zcash%20users%20lack%20a%20native%20way%20to%20communicate%20securely%20and%20privately%20with%20other%20users.%20This%20limitation%20hampers%20adoption%20for%20business%20use%20cases%20where%20private%20communication%20between%20transacting%20parties%20is%20essential.%20Existing%20messaging%20solutions%20either%20lack%20privacy%20guarantees%20or%20aren%27t%20integrated%20with%20Zcash%27s%20privacy%20features.&project_details_solution=ZcashConnect%20will%20implement%20a%20messaging%20protocol%20that%20uses%20Zcash%27s%20existing%20cryptographic%20infrastructure%20to%20enable%20secure%20communication.%20Messages%20will%20be%20encrypted%20using%20recipients%27%20viewing%20keys%20and%20stored%20in%20a%20decentralized%20manner.%20The%20solution%20will%20include%20a%20reference%20implementation%20and%20API%20that%20wallet%20developers%20can%20integrate.&project_details_format=-%20Protocol%20specification%20document%0A-%20Reference%20implementation%20in%20Rust%0A-%20API%20documentation%0A-%20Integration%20guides%20for%20wallet%20developers%0A-%20Security%20analysis%20report%0A-%20User%20interface%20prototype&project_details_dependencies=-%20Zcash%20core%20protocol%20and%20libraries%0A-%20Rust%20programming%20environment%0A-%20Access%20to%20testnet%20for%20development%20and%20testing%0A-%20Collaboration%20with%20wallet%20developers%20for%20feedback%20and%20testing%0A-%20IPFS%20or%20similar%20decentralized%20storage%20solution%20for%20message%20storage&project_details_technical=The%20implementation%20will%20use%20Rust%20for%20the%20core%20protocol%2C%20leveraging%20existing%20Zcash%20cryptographic%20libraries.%20Messages%20will%20be%20encrypted%20using%20recipients%27%20viewing%20keys%2C%20with%20metadata%20protected%20using%20zero-knowledge%20proofs.%20The%20storage%20layer%20will%20use%20IPFS%20for%20message%20persistence%2C%20with%20message%20retrieval%20keyed%20to%20shielded%20addresses.&project_details_merge=We%20plan%20to%20fork%20and%20modify%3A%0A-%20librustzcash%3A%20Add%20message%20encoding%2Fdecoding%20capabilities%0A-%20zcashd%3A%20Add%20optional%20message%20relay%20functionality%0A%0AThese%20changes%20could%20benefit%20the%20ecosystem%20by%20providing%20a%20standard%20way%20to%20handle%20encrypted%20metadata%2C%20useful%20for%20other%20applications%20beyond%20messaging.%20We%20will%20coordinate%20with%20ECC%20and%20ZIP%20editors%20for%20potential%20upstream%20merges%2C%20targeting%20integration%20within%206-12%20months%20after%20successful%20testing.&budget_hardware=5000&budget_hardware_justification=Development%20workstations%2C%20testing%20environment%2C%20and%20cloud%20infrastructure%20for%20prototype%20deployment.&budget_service=8000&budget_service_justification=IPFS%20hosting%2C%20continuous%20integration%20services%2C%20security%20audit%2C%20and%20development%20tools%20licensing.&budget_compensation=62000&budget_compensation_justification=-%20Project%20Lead%20%28Part-time%29%3A%20%2430%2C000%0A-%20Senior%20Developer%20%28Part-time%29%3A%20%2420%2C000%0A-%20Cryptography%20Researcher%20%28Contract%29%3A%20%2412%2C000&budget_total=75000&budget_previous_funding=No&budget_other_sources=No&risk_implementation=-%20Technical%20challenges%20in%20achieving%20desired%20privacy%20guarantees%0A-%20Potential%20scalability%20issues%20with%20message%20storage%0A-%20Integration%20complexity%20for%20existing%20wallets%0A-%20Network%20bandwidth%20and%20storage%20constraints&risk_side_effects=-%20Increased%20network%20load%20from%20message%20storage%0A-%20Potential%20for%20spam%2Fabuse%20of%20the%20messaging%20system%0A-%20Additional%20complexity%20for%20wallet%20developers&risk_metrics=-%20Successful%20implementation%20of%20all%20specified%20features%0A-%20Security%20audit%20completion%20with%20no%20critical%20findings%0A-%20Integration%20with%20at%20least%20two%20major%20Zcash%20wallets%0A-%20Successful%20transmission%20of%20test%20messages%20on%20testnet%0A-%20Documentation%20completeness%20and%20clarity%0A-%20Community%20feedback%20and%20adoption%20metrics&schedule_startup=15000&schedule_startup_justification=Initial%20funding%20needed%20for%20hardware%20purchases%2C%20service%20subscriptions%2C%20and%20first%20month%20of%20development%20work.&schedule_milestones=-%20Milestone%3A%201%0A%20%20Amount%20%28USD%29%3A%2015000%0A%20%20Expected%20Completion%20Date%3A%202024-12-31%0A%20%20Deliverables%3A%20Protocol%20specification%20and%20architecture%20documentation%0A%0A-%20Milestone%3A%202%0A%20%20Amount%20%28USD%29%3A%2020000%0A%20%20Expected%20Completion%20Date%3A%202025-02-28%0A%20%20Deliverables%3A%20Core%20protocol%20implementation%20and%20initial%20testing%0A%0A-%20Milestone%3A%203%0A%20%20Amount%20%28USD%29%3A%2025000%0A%20%20Expected%20Completion%20Date%3A%202025-04-30%0A%20%20Deliverables%3A%20Integration%20with%20test%20wallet%2C%20security%20audit%20completion%0A%0A-%20Milestone%3A%204%0A%20%20Amount%20%28USD%29%3A%2015000%0A%20%20Expected%20Completion%20Date%3A%202025-06-30%0A%20%20Deliverables%3A%20Final%20testing%2C%20documentation%2C%20and%20public%20release&supporting_documents=-%20Technical_Specification.pdf%3A%20Detailed%20protocol%20design%20and%20architecture%0A-%20Team_CVs.pdf%3A%20Comprehensive%20team%20background%20and%20experience%0A-%20Security_Model.pdf%3A%20Analysis%20of%20security%20properties%20and%20threat%20model
                              }
                            }
                            name
                          }
                        }
                        project {
                          id
                        }
                      }
                    }
                  }
                }
              }
          variables: |
            issueId: ${{ github.event.issue.node_id }}

      - name: Get Grant Application Status
        id: get-grant-application-status
        if: ${{steps.get-status-list.outputs.data}}
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const data = ${{ steps.get-status-list.outputs.data }};
            const projectItems = data.node.projectItems.nodes;
            const filteredProjectItems = projectItems.filter(item => 
              item.project?.id === '${{ vars.PROJECT_GRANT_APPLICATION_PROJECT_ID }}'
            );
            const filteredProjectItemsWithStatus = filteredProjectItems.filter(item => 
              item.fieldValueByName?.field?.id === '${{ vars.PROJECT_GRANT_APPLICATION_STATUS_FIELD_ID }}'
            );

            if (!filteredProjectItems || filteredProjectItems.length === 0) {
              core.info('Grant Application issue not found for ${{ github.event.issue.id }}: (vars.PROJECT_GRANT_APPLICATION_PROJECT_ID: "${{ vars.PROJECT_GRANT_APPLICATION_PROJECT_ID }}")');
              core.setOutput('addtoproject', true);
              core.setOutput('settonew', true);
              core.setOutput('status', "New");
            } else if (!filteredProjectItemsWithStatus || filteredProjectItemsWithStatus.length === 0) {
              core.info('Grant Application issue found in project but no status found: (vars.PROJECT_GRANT_APPLICATION_STATUS_FIELD_ID: "${{ vars.PROJECT_GRANT_APPLICATION_STATUS_FIELD_ID }}")');
              core.setOutput('itemid', filteredProjectItems[0].id);
              core.setOutput('settonew', true);
              core.setOutput('status', "New");
            } else {
              core.setOutput('status', filteredProjectItemsWithStatus[0].fieldValueByName.name);
            }
            core.info(`Grant application status result: ${filteredProjectItemsWithStatus[0].fieldValueByName.name}`);

      - name: Add Issue to GitHub Project
        id: add-to-project
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        if: ${{ steps.get-grant-application-status.outputs.addtoproject }}
        uses: octokit/graphql-action@v2.x
        with:
          query: |
            mutation AddIssueToProject($project_id: ID!, $content_id: ID!) {
              addProjectV2ItemById(input: { projectId: $project_id, contentId: $content_id }) {
                item {
                  id
                }
              }
            }
          variables: |
            project_id: ${{vars.PROJECT_GRANT_APPLICATION_PROJECT_ID}}
            content_id: ${{ github.event.issue.node_id }}

      - name: 'Add Issue to GitHub Project: Set Status to "New"'
        id: set-to-new
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        if: ${{ steps.get-grant-application-status.outputs.settonew }}
        uses: octokit/graphql-action@v2.x
        with:
          query: |
            mutation UpdateProjectV2ItemFieldValue(
              $project_id: ID!
              $status_id: ID!
              $item_id: ID!
              $value: String!
            ) {
              updateProjectV2ItemFieldValue(
                input: {
                  projectId: $project_id
                  fieldId: $status_id
                  itemId: $item_id
                  value: { 
                    singleSelectOptionId: $value
                  }
                }
              ) {
                projectV2Item {
                  id
                }
              }
            }
          variables: |
            {
              "project_id": "${{ vars.PROJECT_GRANT_APPLICATION_PROJECT_ID }}",
              "status_id": "${{ vars.PROJECT_GRANT_APPLICATION_STATUS_FIELD_ID }}",
              "item_id": ${{ steps.get-grant-application-status.outputs.addtoproject && fromJSON(steps.add-to-project.outputs.data).addProjectV2ItemById.item.id || steps.get-grant-application-status.outputs.itemid }},
              "value": ${{vars.PROJECT_GRANT_APPLICATION_STATUS_NEW_ID}}
            }

      - name: Logging Debug
        id: logging-debug
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            core.info(${{ toJSON(github.event) }});

      - name: Parse YAML Blocks
        id: parse-yaml
        uses: ./.github/actions/shared/markdown/yamlblocks
        with:
          markdown-content: |
            ${{ toJson(github.event.issue.body) }}
      
      - name: Process New Status
        if: ${{ steps.get-grant-application-status.outputs.status == 'New' }}
        uses: ./.github/actions/pending-grant-application/new
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          vars: ${{ toJSON(vars) }}
          event: ${{ toJSON(github.event) }}

      - name: Process Under Review Status
        if: ${{ steps.get-grant-application-status.outputs.status == 'Under Review' }}
        uses: ./.github/actions/pending-grant-application/under-review
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          vars: ${{ toJSON(vars) }}
          event: ${{ toJSON(github.event) }}

      - name: Process Approved Status
        if: ${{ steps.get-grant-application-status.outputs.status == 'Approved' }}
        uses: ./.github/actions/pending-grant-application/approved
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          vars: ${{ toJSON(vars) }}
          event: ${{ toJSON(github.event) }}

      - name: Process In Progress Status
        if: ${{ steps.get-grant-application-status.outputs.status == 'In Progress' }}
        uses: ./.github/actions/pending-grant-application/in-progress
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          vars: ${{ toJSON(vars) }}
          event: ${{ toJSON(github.event) }}

      - name: Process Complete Status
        if: ${{ steps.get-grant-application-status.outputs.status == 'Complete' }}
        uses: ./.github/actions/pending-grant-application/complete
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          vars: ${{ toJSON(vars) }}
          event: ${{ toJSON(github.event) }}
      
      - name: Process Declined Status
        if: ${{ steps.get-grant-application-status.outputs.status == 'Declined' }}
        uses: ./.github/actions/pending-grant-application/declined
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          vars: ${{ toJSON(vars) }}
          event: ${{ toJSON(github.event) }}

      - name: Process Cancelled Status
        if: ${{ steps.get-grant-application-status.outputs.status == 'Cancelled' }}
        uses: ./.github/actions/pending-grant-application/cancelled
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          vars: ${{ toJSON(vars) }}
          event: ${{ toJSON(github.event) }}
